// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}



enum Role {
  PRINCIPAL
  ADMIN
  TEACHER
  STUDENT
  PARENTS
}

enum Gender {
  MALE
  FEMALE
  OTHER
}

model User {
  user_id         String   @id @default(uuid()) 
  role            Role
  full_name       String
  email           String   @unique
  mobile          String   @unique
  gender          Gender?
  address         String?
  password        String
  active          Boolean  @default(true)
  isDeleted       Boolean  @default(false)
  createdAt       DateTime @default(now())
  updatedAt       DateTime @updatedAt     

  // Relations
  principal  Principal?
  teacher    Teacher?
  student    Student?
  admin      Admin?
}

model Principal {
  user_id         String  @id
  employee_id     String?   @unique
  joining_date    DateTime?
  designation     String?
  qualification   String?
  work_experience String?
  user            User    @relation(fields: [user_id], references: [user_id], onDelete: Cascade)
}

model Admin {
  user_id         String  @id
  employee_id     String?   @unique
  joining_date    DateTime?
  designation     String?
  qualification   String?
  work_experience String?
  user            User    @relation(fields: [user_id], references: [user_id], onDelete: Cascade)
}

model Teacher {
  user_id         String  @id
  employee_id     String?   @unique
  joining_date    DateTime?
  designation     String?
  qualification   String?
  work_experience String?
  class_assigned  String?
  subjects_taught String?
  user            User    @relation(fields: [user_id], references: [user_id], onDelete: Cascade)
}

model Student {
  user_id         String  @id
  student_id      String?   @unique
  enrollment_number String?   @unique
  grade       String? 
  section     String? 
  admission_date  DateTime?
  blood_group     String?
  parents_name    String?
  emergency_contact String?
  user            User    @relation(fields: [user_id], references: [user_id], onDelete: Cascade)
}


//classroom modals

model Classroom {
  id          String   @id @default(uuid())  
  name        String  
  section     String? 
  grade       String?   
  updatedAt   DateTime @updatedAt
  createdAt   DateTime @default(now())
}
